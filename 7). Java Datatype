Given an input integer, you must determine which primitive data types are capable of properly storing that input.
For each input variable n and appropriate primitive datatype, you must determine if the given primitives are capable of storing it. If yes, then print:

Sol:
import java.util.*;
import java.io.*;



class Solution{
    public static void main(String []argh)
    {



        Scanner sc = new Scanner(System.in);
        int t=sc.nextInt();

        for(int i=0;i<t;i++)
        {

            try
            {
                long x=sc.nextLong();
                System.out.println(x+" can be fitted in:");
                if(x>=-128 && x<=127)System.out.println("* byte");
                if(x>=-32768 && x<=32767)
                System.out.println("* short");
                if(x>=-Math.pow(2,31) && x<=(Math.pow(2, 31)-1))
                 System.out.println("* int");
                 if(x>= -Math.pow(2,63) && x<=(Math.pow(2,63)-1));
                  System.out.println("* long");
            }
            catch(Exception e)
            {
                System.out.println(sc.next()+" can't be fitted anywhere.");
            }

        }
    }
}



Test Case 1:
Input: -150
Output: -150 can be fitted in:
* short
* int
* long

Test Case 2:
Input: 143000
Output: 143000 can be fitted in:
* int
* long
