PROBLEM: Given an integer array nums, return the third distinct maximum number in this array. If the third maximum does not exist, return the maximum number.

LANGUAGE: JAVA

SOL:
 class Solution {
    public int thirdMax(int[] arr) {
    int n = arr.length, posTL = -1;
	int large = Arrays.stream(arr).max().getAsInt();
	int secondLarge = Integer.MIN_VALUE;
    int thirdLarge = Integer.MIN_VALUE;

    for (int i = 0; i < n; i++) {
    if(arr[i] > secondLarge && arr[i] != large) {
        secondLarge = arr[i];
    }
    }

    for (int i = 0; i < n; i++) {
    if(arr[i] >= thirdLarge && arr[i] != secondLarge && arr[i] != large) {
        thirdLarge = arr[i];
        posTL = i;
    }
    }
    if(n == 1){
        return arr[0];
    } else if(posTL == -1) {
        return large;
    }
	return thirdLarge;
    }
}

TEST CASE 1
Input: nums = [3,2,1]
Output: 1
Explanation:
The first distinct maximum is 3.
The second distinct maximum is 2.
The third distinct maximum is 1.

TEST CASE 2
Input: nums = [1,2]
Output: 2
Explanation:
The first distinct maximum is 2.
The second distinct maximum is 1.
The third distinct maximum does not exist, so the maximum (2) is returned instead.
